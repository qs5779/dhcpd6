<%# This template is provided as a convenience -%>
<%# and might change without warning -%>
<%

if @dhcpd6_default_lease_time
  default_lease_time = @dhcpd6_default_lease_time
else
#  (at the end the address is no longer usable by the client)
#  (set to 30 days, the usual IPv6 default)
  default_lease_time = '2592000'
end

if @dhcpd6_preferred_lifetime
  preferred_lifetime = @dhcpd6_preferred_lifetime
else
#  (at the end the address is deprecated, i.e., the client should use
#   other addresses for new connections)
#  (set to 7 days, the	usual IPv6 default)
  preferred_lifetime = '604800'
end

if @dhcpd6_renewal_time
  renewal_time = @dhcpd6_renewal_time
else
#  (default is 1/2 preferred lifetime)
#  (set to 1 hour)
  renewal_time = '3600'
end

if @dhcpd6_rebinding_time
  rebinding_time = @dhcpd6_rebinding_time
else
#  (default is 3/4 preferred lifetime)
#  (set to 2 hours)
  rebinding_time = '7200'
end

if @dhcpd6_domain_name_servers
  domain_name_servers = @dhcpd6_domain_name_servers
else
  domain_name_servers = '2001:4860:4860::8888, 2001:4860:4860::8844'
end

if @dhcpd6_domain_search
  domain_search = @dhcpd6_domain_search
else
  domain_search = '"test.example.com","example.com"'
end

if @dhcpd6_refresh_time
  refresh_time = @dhcpd6_refresh_time
else
#  (minimum is 10 minutes, maximum one day, default is to not refresh)
#  (set to 6 hours)
  refresh_time = '21600'
end

-%>
# NOTE: file managed by puppet
# Server configuration file example for DHCPv6
# From the file used for TAHI tests.

# If this DHCP server is the official DHCP server for the local
# network, the authoritative directive should be uncommented.
#authoritative;

# IPv6 address valid lifetime
default-lease-time <%= default_lease_time %>;

# IPv6 address preferred lifetime
preferred-lifetime <%= preferred_lifetime %>;

# T1, the delay before Renew
option dhcp-renewal-time <%= renewal_time %>;

# T2, the delay before Rebind (if Renews failed)
option dhcp-rebinding-time <%= rebinding_time %>;

# Enable RFC 5007 support (same than for DHCPv4)
allow leasequery;

# Global definitions for name server address(es) and domain search list
option dhcp6.name-servers <%= domain_name_servers %>;
option dhcp6.domain-search <%= domain_search %>;

# Set preference to 255 (maximum) in order to avoid waiting for
# additional servers when there is only one
##option dhcp6.preference 255;

# Server side command to enable rapid-commit (2 packet exchange)
##option dhcp6.rapid-commit;

# The delay before information-request refresh
option dhcp6.info-refresh-time <%= refresh_time %>;

# The path of the lease file
dhcpv6-lease-file-name "/var/lib/dhcpd/dhcpd6.leases";

<% if !@dhcpd6_hosts.empty? -%>

<% @dhcpd6_hosts.sort_by {|key,value| key}.each do |key,value| -%>
host <%= key %> {
<% if value['host-identifier'] and !value['host-identifier'].empty? -%>
  host-identifier option dhcp6.client-id <%= value['host-identifier'] %>;
<% end -%>
<% if value['fixed-address6'] and !value['fixed-address6'].empty? -%>
  fixed-address6 <%= value['fixed-address6'] %>;
<% end -%>
<% if value['fixed-prefix6'] and !value['fixed-prefix6'].empty? -%>
  fixed-prefix6 <%= value['fixed-prefix6'] %>;
<% end -%>
<% if value['options'] and !value['options'].empty? -%>
  # Host specific options
<% value['options'].each do |line| -%>
  option <%= line %>;
<% end -%>
<% end -%>
};
<% end -%>
<% end -%>

# Your subnets go here


# Some helpfull logging statements
option dhcp6.macaddr code 193 = string;
option dhcp6.leased-address code 194 = string;
option dhcp6.macaddr = binary-to-ascii(16, 8, ":", suffix(option dhcp6.client-id, 6));
option dhcp6.leased-address = binary-to-ascii(16,16, ":", substring(suffix(option dhcp6.ia-na, 24),0,16));
log(info, concat ("--> Lease for ",config-option dhcp6.leased-address, " leased to ", config-option dhcp6.macaddr));
log(info, concat("--> Client-FQDN: ", option fqdn.fqdn));
log(info, concat("--> Client-DUID: ", binary-to-ascii(16, 8, ":", option dhcp6.client-id)));
log(info, concat("--> Client-ID: ", binary-to-ascii(16, 8, ":", option dhcp-client-identifier)));
